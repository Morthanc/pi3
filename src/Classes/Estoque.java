package Classes;

import java.awt.HeadlessException;
import static java.awt.image.ImageObserver.WIDTH;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Mauricio
 * @author Uriel
 */
public class Estoque extends javax.swing.JFrame {

    String nome, senha, quantidadeStr;
    int num;
    int quantidadeInt;
    public String connectionUrl = "jdbc:sqlserver://localhost:1433;\" +\n"
            + "      \"databaseName=QuadrilhaDeMorte;user=usuarioDB;password=1234";

    /**
     * Creates new form Estoque
     */
    public Estoque() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldPesquisaNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldPesquisaFabricante = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProduto = new javax.swing.JTable();
        jButtonPesquisar = new javax.swing.JButton();
        jButtonMostrarConteudo = new javax.swing.JButton();
        jButtonAlterarEstoque = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinnerQuantidadeAlterar = new javax.swing.JSpinner();
        jSpinnerIdProduto = new javax.swing.JSpinner();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItemPesquisarAlterarEstoque = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome:");

        jLabel2.setText("Fabricante:");

        jTableProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableProduto);

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jButtonMostrarConteudo.setText("Mostrar conteudo da tabela");
        jButtonMostrarConteudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarConteudoActionPerformed(evt);
            }
        });

        jButtonAlterarEstoque.setText("Alterar");
        jButtonAlterarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarEstoqueActionPerformed(evt);
            }
        });

        jLabel3.setText("Id do produto:");

        jLabel4.setText("Somar ou subtrair em estoque:");

        jSpinnerQuantidadeAlterar.setModel(new javax.swing.SpinnerNumberModel(0, -100, 100, 1));

        jSpinnerIdProduto.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jMenu.setText("Menu");

        jMenuItem1.setText("Cadastro");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu.add(jMenuItem1);

        jMenuItemPesquisarAlterarEstoque.setText("Pesquisar/Alterar Estoque");
        jMenuItemPesquisarAlterarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPesquisarAlterarEstoqueActionPerformed(evt);
            }
        });
        jMenu.add(jMenuItemPesquisarAlterarEstoque);

        jMenuBar1.add(jMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldPesquisaFabricante)
                                    .addComponent(jTextFieldPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonPesquisar))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jSpinnerQuantidadeAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonAlterarEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jSpinnerIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jButtonMostrarConteudo))
                        .addGap(212, 212, 212))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldPesquisaFabricante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar))
                .addGap(18, 18, 18)
                .addComponent(jButtonMostrarConteudo)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jSpinnerIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButtonAlterarEstoque)
                    .addComponent(jSpinnerQuantidadeAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        if (jTextFieldPesquisaNome.toString().equals("") || jTextFieldPesquisaFabricante.toString().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Digite algo!", "Atenção!", WIDTH);
        } else {

            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver").newInstance();

                Connection conn = DriverManager.getConnection(connectionUrl);

                System.out.println("Conexão obtida com sucesso.");

                ResultSet rs = null; //variavel que pegará componentes do prepared statement para JTable -URiel
                PreparedStatement psBusca = conn.prepareStatement("SELECT * FROM dbo.Produtos WHERE nome=? AND fabricante=?");//cria um prepared statement para a cláusula de busca na tabela - Uriel

                psBusca.setString(1, jTextFieldPesquisaNome.getText()); //Atribui valor ao primeiro "?" do psBusca - Uriel
                psBusca.setString(2, jTextFieldPesquisaFabricante.getText()); //Idem ao de cima, mas referente ao segundo "?"

                rs = psBusca.executeQuery(); //Executa a query de busca do prepared statement no sql e traz o valor - uriel
                jTableProduto.setModel(DbUtils.resultSetToTableModel(rs)); //Mostra os valores desejados da cláusula de busca na jTable - Uriel

            } catch (SQLException ex) {

                System.out.println("SQLException: " + ex.getMessage());
                System.out.println("SQLState: " + ex.getSQLState());
                System.out.println("VendorError: " + ex.getErrorCode());
            } catch (Exception e) {

                System.out.println("Problemas ao tentar conectar com o banco de dados: " + e);
            }
        }
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonMostrarConteudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarConteudoActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver").newInstance();

            Connection conn = DriverManager.getConnection(connectionUrl);

            ResultSet rs2 = null; //variavel que pegará componentes do prepared statement para JTable -URiel
            PreparedStatement psMostrarTabela = conn.prepareStatement("SELECT * FROM dbo.Produtos");//mostra conteudo da tabela -uriel

            rs2 = psMostrarTabela.executeQuery();//executa o comando -uriel

            jTableProduto.setModel(DbUtils.resultSetToTableModel(rs2));//traz os resultados ao netbeans -uriel

        } catch (SQLException ex) {

            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("VendorError: " + ex.getErrorCode());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {

            System.out.println("Problemas ao tentar conectar com o banco de dados: " + e);
        }
    }//GEN-LAST:event_jButtonMostrarConteudoActionPerformed

    private void jButtonAlterarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarEstoqueActionPerformed

        try {
            Connection conn = DriverManager.getConnection(connectionUrl);

            PreparedStatement psQuantidade;
            psQuantidade = conn.prepareStatement("SELECT quantidade FROM Produtos WHERE quantidade=?");
            psQuantidade.setObject(1, jSpinnerQuantidadeAlterar.getValue());
            // ps.setString(2, senha);
            quantidadeStr = jSpinnerQuantidadeAlterar.getValue().toString();
            ResultSet resultadoQuery;
            quantidadeInt += Integer.parseInt(quantidadeStr);
            System.out.println("asdasdasd");
            if (quantidadeInt >= 5 && quantidadeInt <= 100) {
                resultadoQuery = psQuantidade.executeQuery();
            
                atualizarEstoque();
            } else if (quantidadeInt <= 5) {
                JOptionPane.showMessageDialog(rootPane, "Estoque prestes a acabar.", "Alteração de Estoque", WIDTH);
                atualizarEstoque();
            }
            System.out.println(quantidadeInt);

        } catch (SQLException ex) {

            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("VendorError: " + ex.getErrorCode());
        } catch (NumberFormatException e) {

            System.out.println("Problemas ao tentar conectar com o banco de dados: " + e);
        }


    }//GEN-LAST:event_jButtonAlterarEstoqueActionPerformed

    private void atualizarEstoque() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver").newInstance();

            Connection conn = DriverManager.getConnection(connectionUrl);

            System.out.println("Conexão obtida com sucesso.");

            PreparedStatement psAlterar = conn.prepareStatement("UPDATE dbo.Produtos SET quantidade =? WHERE idProduto = ?");
            psAlterar.setInt(1, quantidadeInt); // atribui o valor que usuário coloca a coluna QUANTIDADE
            psAlterar.setString(2, jSpinnerIdProduto.getValue().toString());

            int result = psAlterar.executeUpdate();

            JOptionPane.showMessageDialog(rootPane, "Produto alterado com sucesso", "Alteração de Estoque", WIDTH);
        } catch (SQLException ex) {

            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("VendorError: " + ex.getErrorCode());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | HeadlessException e) {

            System.out.println("Problemas ao tentar conectar com o banco de dados: " + e);
        }
    }

    private void jMenuItemPesquisarAlterarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPesquisarAlterarEstoqueActionPerformed
        Estoque estoque = new Estoque();
        estoque.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jMenuItemPesquisarAlterarEstoqueActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Cadastro cadastro = new Cadastro();
        cadastro.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Estoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlterarEstoque;
    private javax.swing.JButton jButtonMostrarConteudo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemPesquisarAlterarEstoque;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerIdProduto;
    private javax.swing.JSpinner jSpinnerQuantidadeAlterar;
    private javax.swing.JTable jTableProduto;
    private javax.swing.JTextField jTextFieldPesquisaFabricante;
    private javax.swing.JTextField jTextFieldPesquisaNome;
    // End of variables declaration//GEN-END:variables
}
